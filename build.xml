<project name="scotlandyard" basedir="." default="main">
    
	<property name="src.dir" value="src" />
	<property name="build.dir" value="bin" />
	<property name="test.dir" value="tests" />
	<property name="classes.dir" value="${build.dir}/classes" />
	<property name="jar.dir" value="${build.dir}/jar" />
	<property name="test_classes.dir" value="${build.dir}/tests" />
	<property name="lib.dir" value="lib" />
	<property name="test_main" value="TestRunner" />
    <property name="console_main" value="solution.ConsoleGame" />
    
	<target name="clean">
		<delete dir="${build.dir}" />
	</target>
    
    <path id="3rd-party">
        <pathelement location="${lib.dir}/svgSalamander.jar" />
    </path>
    
	<target name="compile">
		<mkdir dir="${classes.dir}" />
		<javac srcdir="${src.dir}"
               destdir="${classes.dir}"
               includeantruntime="false"
               classpathref="3rd-party" />
	</target>
    
	<target name="jar" depends="compile">
		<mkdir dir="${jar.dir}"/>
		<jar destfile="${jar.dir}/${ant.project.name}.jar" >
            <fileset dir="${classes.dir}" />
            <zipfileset src="${lib.dir}/svgSalamander.jar"
                        includes="**/*.class" />
        </jar>
	</target>
    
    <target name="play" depends="jar">
        <java classname="${console_main}" fork="true">
            <classpath>
                <pathelement location="${jar.dir}/${ant.project.name}.jar" />
            </classpath>
        </java>
    </target>
    
	<path id="tests_classpath">
		<fileset dir="${lib.dir}" includes="**/*.jar" />
		<fileset dir="${jar.dir}" includes="${ant.project.name}.jar" />
	</path>
    
	<target name="compile-tests" depends="compile,jar">
		<mkdir dir="${test_classes.dir}" />
		<javac srcdir="${test.dir}" includeantruntime="false" destdir="${test_classes.dir}" classpathref="tests_classpath" />
	</target>
    
	<target name="test" depends="compile-tests">
		<junit>
			<classpath>
				<pathelement location="${test_classes.dir}" />
				<path refid="tests_classpath" />
				<path location="${jar.dir}/${ant.project.name}.jar" />
			</classpath>
		    <test name="InitialisationTests" />
            <test name="RoundsTests" />
            <test name="MrXLocationsTests" />
			<test name="DetectiveValidMovesTests" />
            <test name="MrXValidMovesTests" />
			<test name="PlayTests" />
            <test name="SpectatorTests" />
            <test name="PlayerNotifyTests" />
            <test name="IsGameOverTests" />
            <test name="GetWinningPlayersTests" />
			<formatter type="brief" usefile="false" />
		</junit>
	</target>
    
    <target name="test-init" depends="compile-tests">
		<junit>
			<classpath>
				<pathelement location="${test_classes.dir}" />
				<path refid="tests_classpath" />
				<path location="${jar.dir}/${ant.project.name}.jar" />
			</classpath>
		    <test name="InitialisationTests" />
			<formatter type="brief" usefile="false" />
		</junit>
	</target>
    
    <target name="test-rounds" depends="compile-tests">
		<junit>
			<classpath>
				<pathelement location="${test_classes.dir}" />
				<path refid="tests_classpath" />
				<path location="${jar.dir}/${ant.project.name}.jar" />
			</classpath>
		    <test name="RoundsTests" />
			<formatter type="brief" usefile="false" />
		</junit>
	</target>
    
    <target name="test-locations" depends="compile-tests">
		<junit>
			<classpath>
				<pathelement location="${test_classes.dir}" />
				<path refid="tests_classpath" />
				<path location="${jar.dir}/${ant.project.name}.jar" />
			</classpath>
            <test name="MrXLocationsTests" />
			<formatter type="brief" usefile="false" />
		</junit>
	</target>
    
    <target name="test-d-moves" depends="compile-tests">
		<junit>
			<classpath>
				<pathelement location="${test_classes.dir}" />
				<path refid="tests_classpath" />
				<path location="${jar.dir}/${ant.project.name}.jar" />
			</classpath>
			<test name="DetectiveValidMovesTests" />
			<formatter type="brief" usefile="false" />
		</junit>
	</target>
    
    <target name="test-x-moves" depends="compile-tests">
		<junit>
			<classpath>
				<pathelement location="${test_classes.dir}" />
				<path refid="tests_classpath" />
				<path location="${jar.dir}/${ant.project.name}.jar" />
			</classpath>
            <test name="MrXValidMovesTests" />
			<formatter type="brief" usefile="false" />
		</junit>
	</target>
    
    <target name="test-play" depends="compile-tests">
		<junit>
			<classpath>
				<pathelement location="${test_classes.dir}" />
				<path refid="tests_classpath" />
				<path location="${jar.dir}/${ant.project.name}.jar" />
			</classpath>
			<test name="PlayTests" />
			<formatter type="brief" usefile="false" />
		</junit>
	</target>
    
    <target name="test-spectators" depends="compile-tests">
		<junit>
			<classpath>
				<pathelement location="${test_classes.dir}" />
				<path refid="tests_classpath" />
				<path location="${jar.dir}/${ant.project.name}.jar" />
			</classpath>
            <test name="SpectatorTests" />
			<formatter type="brief" usefile="false" />
		</junit>
	</target>
    
    <target name="test-notify" depends="compile-tests">
		<junit>
			<classpath>
				<pathelement location="${test_classes.dir}" />
				<path refid="tests_classpath" />
				<path location="${jar.dir}/${ant.project.name}.jar" />
			</classpath>
            <test name="PlayerNotifyTests" />
			<formatter type="brief" usefile="false" />
		</junit>
	</target>
    
    <target name="test-game-over" depends="compile-tests">
		<junit>
			<classpath>
				<pathelement location="${test_classes.dir}" />
				<path refid="tests_classpath" />
				<path location="${jar.dir}/${ant.project.name}.jar" />
			</classpath>
            <test name="IsGameOverTests" />
			<formatter type="brief" usefile="false" />
		</junit>
	</target>
    
    <target name="test-winners" depends="compile-tests">
		<junit>
			<classpath>
				<pathelement location="${test_classes.dir}" />
				<path refid="tests_classpath" />
				<path location="${jar.dir}/${ant.project.name}.jar" />
			</classpath>
            <test name="GetWinningPlayersTests" />
			<formatter type="brief" usefile="false" />
		</junit>
	</target>
    
</project>
